replicaCount: 1

image:
  repository: gcr.io/seqr-project/seqr-pipeline-runner
  pullPolicy: Always

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}

podAnnotations: {}
deploymentAnnotations: {}

pods:
  - name: api
    service:
      type: ClusterIP
      port: 5000
    healthCheckRoute: /status
    command: ["python3", "-m", "v03_pipeline.api"]
    initContainers: |-
      {{- range $r := list "GRCh37" "GRCh38" }}
      {{- range $s := list "rsync_reference_data" "download_vep_data"}}
      - name: {{ $s | replace "_" "-" }}-{{ $r | lower}}
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        command: ["/v03_pipeline/bin/{{ $s }}.bash", "{{ $r }}"]
        resources:
          requests:
            memory: "8Gi"
        volumeMounts:
          - mountPath: /seqr
            name: seqr
      {{- end }}
      {{- end }}
    resources: {}
    readOnlyVolume: false
    sidecar:
      command: ["python3", "-m", "v03_pipeline.bin.pipeline_worker"]
      privileged: true
      resources:
        requests:
          memory: "16Gi"
  - name: ui
    service:
      type: NodePort
      port: 8082
    healthCheckRoute: /
    command: ["luigid"]
    initContainers: {}
    resources: {}
    readOnlyVolume: true
    sidecar: {}

resources:
  {}

environment:
  HAIL_TMPDIR: '/tmp'
  HAIL_SEARCH_DATA_DIR: '/seqr/hail-search-data'
  LOADING_DATASETS_DIR: '/seqr/seqr-loading-temp'
  REFERENCE_DATASETS_DIR: '/seqr/seqr-reference-data'
  ACCESS_PRIVATE_REFERENCE_DATASETS: '0'
  CHECK_SEX_AND_RELATEDNESS: '0'
  EXPECT_WES_FILTERS: '0'
  SHOULD_REGISTER_ALLELES: '0'

affinity: |-
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1.0
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/part-of"
                operator: In
                values:
                - "seqr-platform"
          topologyKey: "kubernetes.io/hostname"

nodeSelector: {}
tolerations: []

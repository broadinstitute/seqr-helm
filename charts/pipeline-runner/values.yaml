replicaCount: 1

image:
  repository: gcr.io/seqr-project/seqr-pipeline-runner
  pullPolicy: Always

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}

podAnnotations: {}
deploymentAnnotations: {}

pods:
  - name: api
    service:
      type: ClusterIP
      port: 5000
    healthCheckRoute: /status
    command: ["python3", "-m", "v03_pipeline.api"]
    initContainers: |-
      - name: rsync-reference-data
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args: ["/v03_pipeline/bin/rsync_reference_data.bash", "GRCh37", "&&", "/v03_pipeline/bin/rsync_reference_data.bash", "GRCh38"]
        volumeMounts:
          - mountPath: /seqr
            name: seqr
      - name: download-vep-data
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args: ["/v03_pipeline/bin/download_vep_data.bash", "GRCh37", "&&", "/v03_pipeline/bin/download_vep_data.bash", "GRCh38"]
        volumeMounts:
          - mountPath: /seqr
            name: seqr
    initContainers: {}
    readOnlyVolume: false
    sidecar:
      command: ["python3", "-m", "v03_pipeline.bin.pipeline_worker"]
  - name: ui
    service:
      type: NodePort
      port: 8082
    healthCheckRoute: /
    command: ["luigid"]
    readOnlyVolume: true
    initContainers: {}

resources:
  {}

environment:
  HAIL_TMPDIR: '/tmp'
  HAIL_SEARCH_DATA: '/seqr/hail-search-data'
  LOADING_DATASETS: '/seqr/seqr-loading-temp'
  REFERENCE_DATASETS: '/seqr/seqr-reference-data'
  ACCESS_PRIVATE_REFERENCE_DATASETS: '0'
  CHECK_SEX_AND_RELATEDNESS: '0'
  EXPECT_WES_FILTERS: '0'
  SHOULD_REGISTER_ALLELES: '0'

affinity: |-
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1.0
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/part-of"
                operator: In
                values:
                - "seqr-platform"
          topologyKey: "kubernetes.io/hostname"

nodeSelector: {}
tolerations: []

image:
  repository: gcr.io/seqr-project/seqr-pipeline-runner
  pullPolicy: Always
imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}

podAnnotations: {}
deploymentAnnotations: {}

additionalSecrets:
  - name: CLICKHOUSE_WRITER_PASSWORD
    valueFrom:
      secretKeyRef:
        name: clickhouse-secrets
        key: writer_password

volumes: |-
  - name: seqr-datasets
    persistentVolumeClaim:
      readOnly: false
      claimName: {{ include "lib.pvc-name" . }}
  - name: docker-socket
    hostPath:
      path: /var/run/docker.sock
  - name: luigi-config
    configMap:
      name: luigi-config
      items:
        - key: luigi.cfg
          path: luigi.cfg
volumeMounts: |-
  - name: seqr-datasets
    mountPath: /var/seqr
    readOnly: false
  - name: docker-socket
    mountPath: /var/run/docker.sock
    readOnly: false
  - name: luigi-config
    mountPath: /etc/luigi/luigi.cfg
    subPath: luigi.cfg

pods:
  - name: api
    service:
      type: ClusterIP
      port: 6000
    healthCheckRoute: /status
    command: ["python3", "-m", "v03_pipeline.api"]
    initContainers: |-
      {{- if $.Values.initRsyncEnabled }}
      {{- range $r := list "GRCh37" "GRCh38" }}
      {{- range $s := list "rsync_reference_data" "download_vep_reference_data"}}
      - name: {{ $s | replace "_" "-" }}-{{ $r | lower}}
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        command: ["/v03_pipeline/bin/{{ $s }}.bash", "{{ $r }}"]
        envFrom:
          - configMapRef:
              name: {{ $.Chart.Name }}
        {{- with $.Values.hailWorkerResources }}
        resources:
          {{- tpl . $ | nindent 4 }}
        {{- end }}
        {{- with $.Values.volumeMounts }}
        volumeMounts:
          {{- tpl . $ | nindent 4 }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- else }}
        []
      {{- end }}
    resources: {}
    sidecar:
      command: ["python3", "-m", "v03_pipeline.bin.pipeline_worker"]
      privileged: true
  - name: ui
    service:
      type: NodePort
      port: 8082
      nodePort: 30951
    healthCheckRoute: /
    command: ["luigid"]
    initContainers: |-
      - name: mkdir-luigi-state
        image: busybox:1.35
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/mkdir', '-p', {{ .Values.environment.LUIGI_STATE_DIR }}]
        {{- with $.Values.volumeMounts }}
        volumeMounts:
          {{- tpl . $ | nindent 4 }}
        {{- end }}
    resources: {}
    sidecar: {}

networkPolicy:
  enabled: false
initRsyncEnabled: true
hailWorkerResources: |-
  requests:
    memory: "12Gi"
environment:
  REFERENCE_DATASETS_DIR: "/var/seqr/seqr-reference-data"
  PIPELINE_DATA_DIR: "/var/seqr/pipeline-data"
  LUIGI_STATE_DIR: "/var/seqr/luigi-state"
  CLICKHOUSE_WRITER_USER: "seqr_clickhouse_writer"

affinity: |-
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1.0
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/part-of"
                operator: In
                values:
                - "seqr-platform"
          topologyKey: "kubernetes.io/hostname"
nodeSelector: {}
tolerations: []

global:
  seqrPlatformDeploy: false
  seqr:
    environment: {}

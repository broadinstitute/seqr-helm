{{- if .Values.run_seqr_database_migration }}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{ .Release.Name }}-migration
  labels:
    deployment: {{ .Release.Name }}
    {{- include "seqr.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        deployment: {{ .Release.Name }}
        {{- include "seqr.labels" . | nindent 4 }}
    spec:
      {{- with .Values.cronjob_volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.cronjob_volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-environment
          # TODO: what should we do about waiting for the sidecars? This should probably be a shell script that does the waiting
          command: ["python", "manage.py", "migrate"]
      {{- if .Values.additionalSidecars }}
      {{- tpl (toYaml .Values.additionalSidecars) . | nindent 8 }}
      {{- end }}
{{- end }}

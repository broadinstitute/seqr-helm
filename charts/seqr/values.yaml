# Default values for seqr.
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: gcr.io/seqr-project/seqr
  pullPolicy: Always
  tag: "gcloud-dev"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

service:
  type: NodePort
  port: 8000

ingress:
  enabled: false
# Ingress example
# ingress:
#   enabled: true
#   className: "nginx"
#   annotations:
#     nginx.ingress.kubernetes.io/configuration-snippet: |
#       proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
#       grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
#     nginx.ingress.kubernetes.io/enable-modsecurity: "true"
#     nginx.ingress.kubernetes.io/modsecurity-snippet: |
#       SecRuleEngine On
#   hosts:
#     - host: seqr-dev.broadinstitute.org
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls:
#    - secretName: nginx-secrets
#      hosts:
#        - seqr-dev.broadinstitute.org

redis:
  enabled: no

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   memory: "0.5Gi"
  #   cpu: "0.05"
  # limits:
  #   memory: "4Gi"
  #   cpu: "8"

tolerations: []

affinity: |-
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1.0
        podAffinityTerm:
          labelSelector:
            matchLabels:
              {{- include "seqr.selectorLabels" . | nindent 12 }}
          topologyKey: "kubernetes.io/hostname"

# default environment variables
environment:
  GUNICORN_WORKER_THREADS: "4"
  POSTGRES_SERVICE_HOSTNAME: "postgres"
  POSTGRES_USERNAME: "postgres"
  POSTGRES_SERVICE_PORT: "5432"
  ELASTICSEARCH_SERVICE_HOSTNAME: "elasticsearch-es-http"
  ELASTICSEARCH_SERVICE_PORT: "9200"
  ELASTICSEARCH_PROTOCOL: "http"
  #ELASTICSEARCH_CA_PATH: "/elasticsearch-certs/ca.crt"
  KIBANA_SERVICE_HOSTNAME: "kibana-kb-http"
  KIBANA_SERVICE_PORT: "5601"
  REDIS_SERVICE_HOSTNAME: "seqr-redis-master"
  SEQR_SERVICE_PORT: "8000"
  STATIC_MEDIA_DIR: null

# Seqr requires a few secrets to be defined. Here you can specify the names of the kubernetes secrets if you
# have named them differently than the defaults. See the README for information on the format of these secrets.
required_secrets:
  postgresSecretName: postgres-secrets
  seqrSecretName: seqr-secrets

# Define any additional secrets that are needed in your environment here. These will be interpolated into the seqr deployment
# directly as yaml.
additional_secrets: {}
# Examples
# additional_secrets:
  # - name: OMIM_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: seqr-secrets
  #       key: omim_key
  # - name: POSTMARK_SERVER_TOKEN  # postmark email service integration
  #   valueFrom:
  #     secretKeyRef:
  #       name: seqr-secrets
  #       key: postmark_server_token
  # - name: SLACK_TOKEN  # slack notification integration
  #   valueFrom:
  #     secretKeyRef:
  #       name: seqr-secrets
  #       key: slack_token
  # - name: GA_TOKEN_ID  # token for google analytics integration
  #   valueFrom:
  #     secretKeyRef:
  #       name: seqr-secrets
  #       key: ga_token_id

volumes: {}
volumeMounts: {}

# TODO: this is is disabled until we can move the db migration stuff out of the docker entrypoint
run_seqr_database_migration: false

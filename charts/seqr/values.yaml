# Default values for seqr.
# This is a YAML-formatted file.

# -- The number of replicas of the seqr web service pod to run. Currenly only 1 is supported.
replicaCount: 1

image:
  # -- The docker image repository to pull images from
  repository: gcr.io/seqr-project/seqr
  # -- The policy for pulling images
  pullPolicy: Always
  # -- The docker image tag to pull from the repository
  # tag: "gcloud-dev"

# -- If needed, you can provide secrets required to retrieve images
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

# -- A dictionary of annotations to add to the seqr Pod
podAnnotations: {}

# -- A dictionary of annotations to add to the seqr Deployment
deploymentAnnotations: {}

service:
  # -- The type for the seqr Service
  type: NodePort
  # -- The port for the seqr Service
  port: 8000

ingress:
  # -- Enables or Disables the seqr Ingress object
  enabled: false
# Ingress example
# ingress:
#   enabled: true
#   className: "nginx"
#   annotations:
#     nginx.ingress.kubernetes.io/configuration-snippet: |
#       proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
#       grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
#     nginx.ingress.kubernetes.io/enable-modsecurity: "true"
#     nginx.ingress.kubernetes.io/modsecurity-snippet: |
#       SecRuleEngine On
#   hosts:
#     - host: seqr-dev.broadinstitute.org
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls:
#    - secretName: nginx-secrets
#      hosts:
#        - seqr-dev.broadinstitute.org

# -- Sets the resource requests and limits for the seqr Deployment
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   memory: "0.5Gi"
  #   cpu: "0.05"
  # limits:
  #   memory: "4Gi"
  #   cpu: "8"

# Prefer to be scheduled away from other seqr platform pods
affinity: |-
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1.0
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/part-of"
                operator: In
                values:
                - "seqr-platform"
          topologyKey: "kubernetes.io/hostname"

nodeSelector: {}
tolerations: []

# default environment variables
environment:
  # -- The number of threads to allocate to the gunicorn server
  GUNICORN_WORKER_THREADS: "4"
  # -- The hostname to use for the postgres database connectsion
  POSTGRES_SERVICE_HOSTNAME: "seqr-postgresql"
  # -- The username to use for the postgres database connection
  POSTGRES_USERNAME: "postgres"
  # -- The TCP port number to use for the postgres database connection
  POSTGRES_SERVICE_PORT: "5432"
  # -- The hostname of the redis cache that seqr should use
  REDIS_SERVICE_HOSTNAME: "seqr-redis-master"
  # -- The port of the redis cache that seqr should use
  REDIS_SERVICE_PORT: "6379"
  # -- The port that the seqr server should listen on
  SEQR_SERVICE_PORT: "8000"  # TODO: this should probably always match the service.port setting?
  # -- If storing static media files in a local filesystem, the path to that filesystem
  STATIC_MEDIA_DIR: null

# Seqr requires a few secrets to be defined. Here you can specify the names of the kubernetes secrets if you
# have named them differently than the defaults. See the README for information on the format of these secrets.

# -- Secrets which are required for seqr's functionality
requiredSecrets:
  # -- The secret containing the postgres credentials. See the README for information on the format of this secret
  postgresSecretName: &postgresSecretName postgres-secrets
  # -- The secret containing the seqr required secrets. See the README for information on the format of this secret
  seqrSecretName: seqr-secrets

# Define any additional secrets that are needed in your environment here. These will be interpolated into the seqr deployment
# directly as yaml.
# -- If you have additional secrets to provide to the seqr Deployment, provide them in this dictionary. Examples can be found in the default values.yaml file.
additionalSecrets: {}
# Examples
# additionalSecrets:
# - name: OMIM_KEY
#   valueFrom:
#     secretKeyRef:
#       name: seqr-secrets
#       key: omim_key
# - name: POSTMARK_SERVER_TOKEN  # postmark email service integration
#   valueFrom:
#     secretKeyRef:
#       name: seqr-secrets
#       key: postmark_server_token
# - name: SLACK_TOKEN  # slack notification integration
#   valueFrom:
#     secretKeyRef:
#       name: seqr-secrets
#       key: slack_token
# - name: GA_TOKEN_ID  # token for google analytics integration
#   valueFrom:
#     secretKeyRef:
#       name: seqr-secrets
#       key: ga_token_id

# -- Additional data volumes to use in the seqr Deployment
volumes: {}
# -- Mountpoint information for additional data volumes on the seqr Deployment
volumeMounts: {}

jobAfterHook: ""
jobBeforeHook: ""
cronJobs:
  - name: check-new-samples-job
    schedule: "*/10 * * * *"
    command: "python manage.py check_for_new_samples_from_pipeline"

redis:
  # -- enables or disables redis deployment using this chart
  enabled: true

  # -- default redis settings
  architecture: standalone
  auth:
    enabled: false
  fullnameOverride: "seqr-redis"

postgresql:
  enabled: true
  architecture: standalone
  auth:
    username: postgres
    existingSecret: *postgresSecretName
    secretKeys:
      # Keyword used to find the admin password inside the existingSecret
      adminPasswordKey: password
  fullnameOverride: seqr-postgresql
  image:
    tag: '12.19.0-debian-12-r9'
  postgresqlDataDir: /seqr/postgresql-data
  primary:
    persistence:
      existingClaim: |-
        {{ include "lib.pvc-name" . }}
      mountPath: /seqr
    # We ran into race condition issues with the liveness probe killing
    # the postgres init and leaving partial state in the data dir.
    # Some details here: https://github.com/bitnami/charts/issues/14683
    startupProbe:
      enabled: true

    # This is a reduced initContainers intended to replace the default
    # provided with volumePermissions.enabled set to True.  The default
    # uses the /data subdirectory and ignores postgresqlDataDir
    # leading to an incorrectly permissioned data directory.
    # See here: https://github.com/bitnami/charts/blob/aa038e9953df2ba74d481cb7ba1cccb3dc32c5fc/bitnami/postgresql/templates/primary/statefulset.yaml#L117-L157
    initContainers:
      - name: seqr-postgresql-init-chmod-data
        image: |-
          {{- include "postgresql.v1.volumePermissions.image" . }}
        imagePullPolicy: "IfNotPresent"
        command:
          - /bin/sh
          - -ec
          - |
            mkdir -p {{ .Values.postgresqlDataDir }}
            chown -R `id -u`:`id -G | cut -d " " -f2` {{ .Values.postgresqlDataDir }}
        # In theory this block is template-able but is getting wrapped in single quotes.
        securityContext:
          runAsGroup: 0
          runAsNonRoot: false
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
          - name: data
            mountPath: /seqr